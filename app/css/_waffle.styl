/*!
 * waffle-grid - v1.3.1 - (https://lucasgruwez.github.io/waffle-grid)
 * Copyright 2017 Lucas Gruwez.
 * Licensed under MIT
 * https://lucasgruwez.github.io/waffle-grid
 */

// Class names
// Change them to whatever you're used to
$grid-classname         = 'grid'    // default
$row-classname          = 'row'     // default
$column-classname       = 'col'     // default
$str-column-classname   = '"%s"' % $column-classname

$joiner                 = '-'


// $media-mobile-width = 480px
$media-tablet   = 480px
$media-desktop  = 900px


// Column amounts, results in:
// .col-n{$joiner}4, or .col-n{$joiner}8
$grid-columns       = 4 8 12   // default

// Gutter width
$gutter-width       = 20px      // default

// Grid width and max-width.
// It is automatically centered on the page.
$grid-width         = 960px     // default
$grid-max-width     = 1160px    // default

// Pushes and Pulls
$pushes             = true      // default
$pulls              = true      // default



// z-index global values
// @info: use this value in conjunction with a modifier value like $ztop+50 to increment your module over a relative element
$ztop       = 100
$zztop      = 10000
$zzztop     = 1000000


// Breakpoints. Structure:
// name             =           (screen-width, column-amounts)
// $breakpoints: (
//     m: (840px, (4, 6, 8)),
//     s: (480px, (4, 6)),
// )

// Actual css, change at your own risk

percentage(a)
    unit(a, '%') * 100


// .{$grid-classname}
.grid
    display: flex
    flex-direction: column
    width: 100%
    max-width: $grid-max-width
    margin: 0 auto


.{$row-classname}
    display: flex
    flex-direction: row
    width: 100%
    flex-wrap: wrap


.{$column-classname}
    box-sizing: border-box
    margin: unit($gutter-width / 2, 'px')
    vertical-align: top

.row
    &.center
        justify-content: center
        align-items: center

// [class*={$str=column-classname}]
.col
    // padding: .5rem
    &.middle
        vertical-align: middle

    &.bottom
        vertical-align: middle


.center
    margin-left: auto
    margin-right: auto

.left
    margin-right: auto

.right
    margin-left: auto

.w-auto
    flex: 1


// for $col-am in $grid-columns
//     for $i in (1..$col-am)

//         .{$column-classname}-{$i}{$joiner}{$col-am}
//             $result = percentage($i / $col-am)
//             width: "calc(%s - %s)" % ($result $gutter-width)

//         if $pushes
//             .push-{$i}{$joiner}{$col-am}
//                 $result = percentage($i / $col-am)
//                 margin-left: "calc(%s + %s / 2)" % ($result $gutter-width)


//         if $pulls
//             .pull-{$i}{$joiner}{$col-am}
//                 $result = percentage($i/$col-am)
//                 margin-right: "calc(%s - %s / 2)" % ($result $gutter-width)



newGrid($name)
    [{$name}-hide]
        display: none

    [{$name}-show]
        display: initial


    for $col-am in $grid-columns
        for $i in (1..$col-am)

            $str = '"%s-%s"' % ($i $col-am)

            [{$name}={$str}]
                $result = percentage($i / $col-am)
                width: "calc(%s - %s)" % ($result $gutter-width)
                // width: $result

newGrid('mobile')


@media screen and (min-width: $media-tablet)
    newGrid('tablet')


@media screen and (min-width: $media-desktop)

    // .page-container
    //     max-width: $grid-max-width

    newGrid('desktop')


// for $bp in $breakpoints
//     $bp-name        = nth($bp, 1)
//     $bp-width       = nth(nth($bp, 2), 1)
//     $bp-col-ams     = nth(nth($bp, 2), 2)

//     @media (max-width: $bp-width)
//         .{$bp-name}-hide
//             display: none

//         .w-{$bp-name}-auto
//             flex: 1

//         for $col-am in $bp-col-ams
//             for $i in (1..$col-am)

//                 .{$column-classname}-{$bp-name}-{$i}{$joiner}{$col-am}
//                     $result = percentage($i / $col-am)
//                     width: "calc(%s - %s)" % ($result $gutter-width)
//                     // width: calc({percentage($i/$col-am)} - {$gutter-width})

//                 if ($pushes)
//                     .push-{$bp-name}-{$i}{$joiner}{$col-am}
//                         $result = percentage($i / $col-am)
//                         margin-left: "calc(%s + %s / 2)" % ($result $gutter-width)
//                         // margin-left: calc({percentage($i/$col-am)} + {$gutter-width} / 2)

//                 if ($pulls)
//                     .pull-{$bp-name}-{$i}{$joiner}{$col-am}
//                         $result = percentage($i/$col-am)
//                         margin-right: "calc(%s - %s / 2)" % ($result $gutter-width)
//                         // margin-right: calc({percentage($i/$col-am)} + {$gutter-width} / 2)

// @function reverse($list, $recursive: false)
//    $result: ()

//    for $i from length($list)*-1 through -1
//       if type-of(nth($list, abs($i))) == list and $recursive
//         $result: append($result, reverse(nth($list, abs($i)), $recursive))

//       else
//         $result: append($result, nth($list, abs($i)))

//    @return $result

// for $bp in reverse($breakpoints)
//     $bp-name: nth($bp, 1)
//     $bp-width: nth(nth($bp, 2), 1)

//     @media (min-width: $bp-width)
//         .{$bp-name}-and-lower {display: none}







// under 150 lines !!
